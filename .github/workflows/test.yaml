name: Run Unit Tests

on:
  push:
    branches:
      - main
      - test/*
  pull_request:
    branches:
      - main
  workflow_dispatch: # Allows manual triggering of the workflow

jobs:
  # test_win_x86:
  #   runs-on: windows-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: List .NET SDKs
  #       run: dotnet --list-sdks

  #     - name: Uninstall existing .NET SDK (x64)
  #       run: |
  #         $path = "C:\Program Files\dotnet\sdk\9.0.101"
  #         if (Test-Path $path) {
  #           Remove-Item -Recurse -Force $path
  #         }

  #     - name: Install Visual C++ Redistributable
  #       run: choco install vcredist2015 -y

  #     - name: Download and install .NET 9.0 SDK (x86)
  #       run: |
  #         Invoke-WebRequest -Uri "https://download.visualstudio.microsoft.com/download/pr/838bc4f1-96ee-43f9-8e47-2dc2656590c0/15cbe313b18ccbeffdb61cff66f5ef26/dotnet-sdk-9.0.101-win-x86.exe" -OutFile "dotnet-sdk-9.0.101-win-x86.exe"
  #         Start-Process -FilePath "dotnet-sdk-9.0.101-win-x86.exe" -ArgumentList "/install", "/quiet", "/norestart" -Wait
  #         Remove-Item -Path "dotnet-sdk-9.0.101-win-x86.exe"

  #     - name: Run win-x86 unit tests
  #       shell: pwsh
  #       run: |
  #         $env:DOTNET_ROOT = "C:\Program Files (x86)\dotnet"
  #         $env:Path += ";C:\Program Files (x86)\dotnet"
  #         & "C:\Program Files (x86)\dotnet\dotnet.exe" test tests/GrindCore.Tests/GrindCore.Tests.csproj -c Release -r win-x86 -p:TargetFramework=net9.0 -p:TargetFrameworks=net9.0



  # test_linux_x64:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Setup .NET
  #       uses: actions/setup-dotnet@v3
  #       with:
  #         dotnet-version: '9.0'

  #     - name: List .NET SDKs
  #       run: dotnet --list-sdks

  #     - name: Run linux-x64 unit tests
  #       run: dotnet test tests/GrindCore.Tests/GrindCore.Tests.csproj -c Release -r linux-x64 -p:TargetFramework=net9.0 -p:TargetFrameworks=net9.0

  # test_linux_arm64:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v2

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2

  #     - name: Build Docker image
  #       run: docker buildx build --platform linux/arm64 -t linux-arm64 -f .github/workflows/Dockerfile.linux-arm64 . --load

  #     - name: Run build and test inside Docker container (Linux ARM64)
  #       run: |
  #         docker run --rm --platform linux/arm64 -v "$(pwd):/app" linux-arm64 sh -c "dotnet test /app/tests/GrindCore.Tests/GrindCore.Tests.csproj -c Release -r linux-arm64 -p:TargetFramework=net9.0 -p:TargetFrameworks=net9.0"

  # test_linux_arm:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Setup .NET
  #       uses: actions/setup-dotnet@v3
  #       with:
  #         dotnet-version: '8.0.x'

  #     - name: Install dependencies
  #       run: dotnet restore -r linux-arm -p:TargetFramework=net8.0 -p:TargetFrameworks=net8.0

  #     - name: Build project
  #       run: dotnet build tests/GrindCore.Tests.Runtime/GrindCore.Tests.Runtime.csproj -c Release -r linux-arm -p:TargetFramework=net8.0 -p:TargetFrameworks=net8.0

  #     - name: Set up Docker Buildx
  #       run: |
  #         docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
  #         docker buildx create --use --name mybuilder

  #     - name: Build Docker image
  #       run: docker buildx build --platform linux/arm/v7 -t linux-arm -f .github/workflows/Dockerfile.linux-arm . --load

  #     - name: Run tests in Docker container
  #       run: docker run --rm --platform linux/arm/v7 -v "$(pwd):/app" linux-arm bash -c "/app/tests/GrindCore.Tests.Runtime/bin/Release/net8.0/linux-arm/GrindCore.Tests.Runtime"

  test_win_x64:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0'

      - name: List .NET SDKs
        run: dotnet --list-sdks

      - name: Run win-x64 unit tests
        run: dotnet test tests/GrindCore.Tests/GrindCore.Tests.csproj -c Release -r win-x64 -p:TargetFramework=net9.0 -p:TargetFrameworks=net9.0

      - name: Build win-x86 Runtime unit test
        run: dotnet build tests/GrindCore.Tests.Runtime/GrindCore.Tests.Runtime.csproj -c Release -r win-x86 -p:TargetFramework=net9.0 -p:TargetFrameworks=net9.0

      - name: Run win-x86 Runtime unit tests
        shell: pwsh
        run: |
          $env:DOTNET_ROOT="C:\Program Files (x86)\dotnet"
          $env:Path="$env:DOTNET_ROOT;$env:Path"
          .\tests\GrindCore.Tests.Runtime\bin\Release\net9.0\win-x86\GrindCore.Tests.Runtime
